<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>CMatrix: A Powerful C++ Matrix Library</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ulink url="https://opensource.org/licenses/MIT"><image type="html" name="License-MIT-yellow.svg" inline="yes"></image>
</ulink> <ulink url="https://github.com/B-Manitas/CMatrix"><image type="html" name="Status-Active-green.svg" inline="yes"></image>
</ulink></para>
<para>CMatrix is a robust C++ matrix library designed to simplify matrix operations and provide extensive functionalities. This library is tailored for Data Science and Machine Learning projects, offering a versatile toolset for working with matrices.</para>
<sect1 id="index_1autotoc_md1">
<title>Table of Contents</title>
<para><orderedlist>
<listitem><para><ulink url="#installation">Installation</ulink></para>
</listitem><listitem><para><ulink url="#exemple-of-usage">Example of Usage</ulink></para>
</listitem><listitem><para><ulink url="#hierarchical-structure">Hierarchical Structure</ulink></para>
</listitem><listitem><para><ulink url="#license">Licence</ulink></para>
</listitem></orderedlist>
</para>
</sect1>
<sect1 id="index_1autotoc_md2">
<title>Installation</title>
<para>To install the library, follow these steps:</para>
<para><orderedlist>
<listitem><para>Clone the repository using the following command:</para>
</listitem></orderedlist>
</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">git<sp/>clone<sp/>https://github.com/B-Manitas/CMatrix.git</highlight></codeline>
</programlisting></para>
<para><orderedlist>
<listitem><para>Include the <ulink url="include/CMatrix.hpp"><computeroutput>cmatrix.hpp</computeroutput></ulink> file in your project.</para>
</listitem></orderedlist>
</para>
</sect1>
<sect1 id="index_1autotoc_md3">
<title>Exemple of Usage</title>
<para>Here&apos;s an example of how to use CMatrix:</para>
<para><programlisting filename=".cpp"><codeline><highlight class="preprocessor">#include<sp/>&quot;cmatrix.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>2x3<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcmatrix" kindref="compound">cmatrix&lt;int&gt;</ref><sp/>mat<sp/>=<sp/>{{1,<sp/>2,<sp/>3},<sp/>{4,<sp/>5,<sp/>6}};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>random<sp/>3x2<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcmatrix" kindref="compound">cmatrix&lt;int&gt;</ref><sp/>rand<sp/>=<sp/><ref refid="group__static_1gabd1f040eca612660113a96308d8a9ccc" kindref="member">cmatrix&lt;int&gt;::randint</ref>(3,<sp/>2,<sp/>0,<sp/>10);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>rand.<ref refid="group__general_1ga0a4525e6c737050e759f753c00001666" kindref="member">print</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performs<sp/>a<sp/>calculation<sp/>on<sp/>the<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mat<sp/>+=<sp/>((rand<sp/>*<sp/>2)<sp/>-<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>transpose<sp/>of<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mat.<ref refid="classcmatrix_1aa65881168e99756c64bf3bb312bee473" kindref="member">transpose</ref>().print();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;&gt;<sp/></highlight><highlight class="stringliteral">&quot;[[18,<sp/>9],<sp/>[5,<sp/>22],<sp/>[20,<sp/>13]]&quot;</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="index_1autotoc_md4">
<title>Hierarchical Structure</title>
<para>CMatrix is structured as follows:</para>
<para><table rows="15" cols="2"><row>
<entry thead="yes"><para>Class </para>
</entry><entry thead="yes"><para>Description  </para>
</entry></row>
<row>
<entry thead="no"><para>include </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><ulink url="include/CMatrix.hpp"><computeroutput>CMatrix.hpp</computeroutput></ulink> </para>
</entry><entry thead="no"><para>The main template class that can work with any data type except bool.  </para>
</entry></row>
<row>
<entry thead="no"><para>src </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><ulink url="include/CMatrixExceptions.hpp"><computeroutput>CMatrix.tpp</computeroutput></ulink> </para>
</entry><entry thead="no"><para>General methods of the class.  </para>
</entry></row>
<row>
<entry thead="no"><para><ulink url="include/CMatrixConstructors.tpp"><computeroutput>CMatrixConstructors.hpp</computeroutput></ulink> </para>
</entry><entry thead="no"><para>Implementation of class constructors.  </para>
</entry></row>
<row>
<entry thead="no"><para><ulink url="include/CMatrixGetter.tpp"><computeroutput>CMatrixGetter.hpp</computeroutput></ulink> </para>
</entry><entry thead="no"><para>Methods to retrieve information about the matrix and access its elements.  </para>
</entry></row>
<row>
<entry thead="no"><para><ulink url="include/CMatrixSetter.tpp"><computeroutput>CMatrixSetter.hpp</computeroutput></ulink> </para>
</entry><entry thead="no"><para>Methods to set data in the matrix.  </para>
</entry></row>
<row>
<entry thead="no"><para><ulink url="include/CMatrixCheck.tpp"><computeroutput>CMatrixCheck.tpp</computeroutput></ulink> </para>
</entry><entry thead="no"><para>Methods to verify matrix conditions and perform checks before operations to prevent errors.  </para>
</entry></row>
<row>
<entry thead="no"><para><ulink url="include/CMatrixManipulation.tpp"><computeroutput>CMatrixManipulation.hpp</computeroutput></ulink> </para>
</entry><entry thead="no"><para>Methods to find elements in the matrix and transform it.  </para>
</entry></row>
<row>
<entry thead="no"><para><ulink url="include/CMatrixOperator.tpp"><computeroutput>CMatrixOperator.hpp</computeroutput></ulink> </para>
</entry><entry thead="no"><para>Implementation of various operators.  </para>
</entry></row>
<row>
<entry thead="no"><para><ulink url="include/CMatrixStatic.tpp"><computeroutput>CMatrixStatic.hpp</computeroutput></ulink> </para>
</entry><entry thead="no"><para>Implementation of static methods of the class.  </para>
</entry></row>
<row>
<entry thead="no"><para><ulink url="include/CMatrixStatistics.tpp"><computeroutput>CMatrixStatistics.hpp</computeroutput></ulink> </para>
</entry><entry thead="no"><para>Methods to perform statistical operations on the matrix.  </para>
</entry></row>
<row>
<entry thead="no"><para>test </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><ulink url="test/CMatrixTest.tpp"><computeroutput>CMatrixTest.hpp</computeroutput></ulink> </para>
</entry><entry thead="no"><para>Contains the tests for the class.  </para>
</entry></row>
</table>
</para>
</sect1>
<sect1 id="index_1autotoc_md5">
<title>Documentation</title>
<para>For detailed information on how to use CMatrix, consult the <ulink url="functions.html">documentation</ulink>.</para>
</sect1>
<sect1 id="index_1autotoc_md6">
<title>License</title>
<para>This project is licensed under the MIT License, ensuring its free and open availability to the community. </para>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
